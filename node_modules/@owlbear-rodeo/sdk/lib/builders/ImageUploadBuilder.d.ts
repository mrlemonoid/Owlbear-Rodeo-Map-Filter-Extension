import { ImageGrid, RichText, TextContent, TextContentType, TextItemType, TextSize, Vector2 } from "../types";
import { ImageUpload } from "../types/Assets";
export declare class ImageUploadBuilder {
    private _upload;
    constructor(file: File | Blob);
    grid(grid: ImageGrid): ImageUploadBuilder;
    dpi(dpi: number): ImageUploadBuilder;
    offset(offset: Vector2): ImageUploadBuilder;
    name(name: string): ImageUploadBuilder;
    description(description: string): ImageUploadBuilder;
    rotation(rotation: number): ImageUploadBuilder;
    scale(scale: Vector2): ImageUploadBuilder;
    locked(locked: boolean): ImageUploadBuilder;
    visible(visible: boolean): ImageUploadBuilder;
    text(text: TextContent): ImageUploadBuilder;
    textItemType(textItemType: TextItemType): ImageUploadBuilder;
    textWidth(width: TextSize): ImageUploadBuilder;
    textHeight(height: TextSize): ImageUploadBuilder;
    richText(richText: RichText): ImageUploadBuilder;
    plainText(plainText: string): ImageUploadBuilder;
    textType(textType: TextContentType): ImageUploadBuilder;
    textPadding(padding: number): ImageUploadBuilder;
    fontFamily(fontFamily: string): ImageUploadBuilder;
    fontSize(fontSize: number): ImageUploadBuilder;
    fontWeight(fontWeight: number): ImageUploadBuilder;
    textAlign(textAlign: "LEFT" | "CENTER" | "RIGHT"): ImageUploadBuilder;
    textAlignVertical(textAlignVertical: "BOTTOM" | "MIDDLE" | "TOP"): ImageUploadBuilder;
    textFillColor(fillColor: string): ImageUploadBuilder;
    textFillOpacity(fillOpacity: number): ImageUploadBuilder;
    textStrokeColor(strokeColor: string): ImageUploadBuilder;
    textStrokeOpacity(strokeOpacity: number): ImageUploadBuilder;
    textStrokeWidth(strokeWidth: number): ImageUploadBuilder;
    textLineHeight(lineHeight: number): ImageUploadBuilder;
    build(): ImageUpload;
}
