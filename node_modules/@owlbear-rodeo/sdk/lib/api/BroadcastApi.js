var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class BroadcastApi {
    constructor(messageBus) {
        this.messageBus = messageBus;
    }
    sendMessage(channel, data, options) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.messageBus.sendAsync("OBR_BROADCAST_SEND_MESSAGE", {
                channel,
                data,
                options,
            });
        });
    }
    onMessage(channel, callback) {
        this.messageBus.send("OBR_BROADCAST_SUBSCRIBE", { channel });
        this.messageBus.on(`OBR_BROADCAST_MESSAGE_${channel}`, callback);
        return () => {
            this.messageBus.send("OBR_BROADCAST_UNSUBSCRIBE", { channel });
            this.messageBus.off(`OBR_BROADCAST_MESSAGE_${channel}`, callback);
        };
    }
}
export default BroadcastApi;
