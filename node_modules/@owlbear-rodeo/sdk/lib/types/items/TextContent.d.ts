export declare type TextSize = "AUTO" | number;
export interface TextStyle {
    fillColor: string;
    fillOpacity: number;
    strokeColor: string;
    strokeOpacity: number;
    strokeWidth: number;
    textAlign: "LEFT" | "CENTER" | "RIGHT";
    textAlignVertical: "BOTTOM" | "MIDDLE" | "TOP";
    fontFamily: string;
    fontSize: number;
    fontWeight: number;
    lineHeight: number;
    padding: number;
}
export declare type TextContentType = "PLAIN" | "RICH";
export declare type Descendant = Element | FormattedText;
export declare type BulletedListElement = {
    type: "bulleted-list";
    children: Descendant[];
};
export declare type NumberedListElement = {
    type: "numbered-list";
    children: Descendant[];
};
export declare type HeadingOneElement = {
    type: "heading-one";
    children: Descendant[];
};
export declare type HeadingTwoElement = {
    type: "heading-two";
    children: Descendant[];
};
export declare type ListItemElement = {
    type: "list-item";
    children: Descendant[];
};
export declare type ParagraphElement = {
    type: "paragraph";
    children: Descendant[];
};
export declare type Element = BulletedListElement | NumberedListElement | HeadingOneElement | HeadingTwoElement | ListItemElement | ParagraphElement;
export declare type ElementFormat = Element["type"];
export declare type FormattedText = {
    bold?: boolean;
    italic?: boolean;
    underline?: boolean;
    text: string;
};
export declare type MarkFormat = keyof Omit<FormattedText, "text">;
export declare type RichText = Descendant[];
export declare function isFormattedText(descendant: Descendant): descendant is FormattedText;
export declare function isElement(descendant: Descendant): descendant is Element;
export interface TextContent {
    /** The text formatted as Slate nodes */
    richText: RichText;
    /** The text without any formatting */
    plainText: string;
    style: TextStyle;
    /** Which text value should be used `PLAIN` for `plainText` and `RICH` for `richText` */
    type: TextContentType;
    width: TextSize;
    height: TextSize;
}
export declare type TextItemType = "LABEL" | "TEXT";
